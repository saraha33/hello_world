(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1004:function(t,e,i){"use strict";i.r(e);var s={name:"BaseMap",props:{attribution:{type:String,default:'Source: <a href="https://openstreetmap.org/">OpenStreetMap contributors</a>'},attributionPosition:{type:String,default:"bottomright",validate:t=>["topright","bottomleft","bottomright"].includes(t)},centerMarker:{type:Number,default:null},clusterSizes:{type:Object,default:()=>({medium:5,large:20,xlarge:100}),validator:t=>t.medium&&t.large&&t.xlarge},copyright:{type:String,default:"<a href=http://creativecommons.org/licenses/by-sa/3.0/>CC BY-SA 3.0</a>"},highlightMarker:{type:Number,default:null},icon:{type:String,default:'<svg viewBox="0 0 70.866 70.866" xmlns="http://www.w3.org/2000/svg"><path d="m35.433 0a22.731 22.731 0 0 0-22.731 22.82 24.125 24.125 0 0 0 1.872 9.1814l19.611 38.063a1.3718 1.3718 0 0 0 2.496 0l19.611-38.063a22.249 22.249 0 0 0 1.872-9.1814 22.731 22.731 0 0 0-22.731-22.82zm0 32.858a10.216 10.216 0 1 1 10.216-10.216 10.241 10.241 0 0 1-10.216 10.216z" fill="#010101"/></svg>'},iconSize:{type:Number,default:32},options:{type:Object,default:()=>({})},marker:{type:Array,default:()=>[],validator:t=>t.every(t=>t.latLng||t.coordinates)},markerPopups:{type:Boolean,default:!0},maxZoom:{type:Number,default:18},url:{type:String,default:""},tileLayerService:{type:String,default:"WMTS",validator:t=>["WMTS","TMS","WMS"].includes(t)},zoom:{type:Number,default:16}},data:()=>({L:null,map:null,activePopUp:null,boundsPadding:[0,20],highlightedMarker:null,markerClass:"base-map-marker-icon",markerClusterClass:"base-map-marker-cluster",popupOptions:{offset:[10,-25],closeButton:!1,keepInView:!0},scrollWheelZoom:!1}),computed:{observer(){return new IntersectionObserver((t,e)=>{t.forEach(t=>{t.isIntersecting&&(e.unobserve(t.target),this.init())})})},cssProps(){return{"--leaflet-popup-offset-bottom":this.popupOptions.offset[1]+"px"}},markerFiltered(){return Array.from(new Set(this.marker.map(JSON.stringify))).map(JSON.parse)}},watch:{centerMarker(t){null!==t&&this.map.setView(this.getLatLng(this.markerFiltered[t]),this.zoom)},highlightMarker(t,e){if(null!==t)return this.map.closePopup(),this.resetAllMarker(),void this.map.eachLayer(e=>{if(e._bounds&&e._icon){const i=this.getLatLng(this.markerFiltered[t]);if(this.L.latLngBounds(e._bounds).contains(i))return void e._icon.classList.add(this.markerClusterClass+"--active")}null!=e.options.id&&e.options.id===t&&(this.highlightedMarker=e._icon,this.highlightedMarker.classList.add(this.markerClass+"--active"))});null!=this.highlightedMarker&&this.activePopUp!==e&&(this.highlightedMarker.classList.remove(this.markerClass+"--active"),this.highlightedMarker=null);const i=this.$el.querySelector(`.${this.markerClusterClass}--active`);i&&i.classList.remove(this.markerClusterClass+"--active")}},beforeDestroy(){this.observer.disconnect()},mounted(){this.observer.observe(this.$el)},methods:{init(){if(this.L)return;this.L=i(458),i(459),i(460),this.map=this.L.map(this.$refs.mapElement,{scrollWheelZoom:this.scrollWheelZoom,tap:!1}),this.map.attributionControl.setPosition(this.attributionPosition);const t={maxZoom:this.maxZoom,attribution:[this.attribution,this.copyright].join(", "),tms:"TMS"===this.tileLayerService,...this.options};if("WMS"===this.tileLayerService?this.L.tileLayer.wms(this.url,t).addTo(this.map):this.L.tileLayer(this.url,t).addTo(this.map),!this.markerFiltered.length)return;const e={className:this.markerClass,html:this.icon,iconSize:[this.iconSize,this.iconSize],iconAnchor:[this.iconSize/2,this.iconSize]},s=this.L.divIcon(e);this.markerCluster=this.L.markerClusterGroup({maxClusterRadius:50,showCoverageOnHover:!1,iconCreateFunction:t=>{const e=t.getAllChildMarkers().length;let i="small",s=48;return e>this.clusterSizes.medium&&(i="medium",s=64),e>this.clusterSizes.large&&(i="large",s=80),e>this.clusterSizes.xlarge&&(i="xlarge",s=128),this.L.divIcon({html:`<div class="${this.markerClusterClass}__inner">${e}</div>`,className:`${this.markerClusterClass} ${this.markerClusterClass}--${i}`,iconSize:this.L.point(s,s)})}}),this.markerFiltered.forEach((t,e)=>{const i=this.L.responsivePopup(this.popupOptions),r={id:e,icon:s};if(!this.getLatLng(t))return;const a=this.L.marker(this.L.latLng(this.getLatLng(t)),r).on("mouseover",this.activateMarker).on("mouseout",this.resetMarker);this.markerPopups&&Array.isArray(t.data)&&(i.setContent(t.data.join("<br>")),a.bindPopup(i)),this.markerCluster.addLayer(a)}),this.map.addLayer(this.markerCluster);if(!this.markerFiltered.filter(t=>t.latLng||t.coordinates).length)return;const r=new this.L.LatLngBounds(this.markerFiltered.map(t=>this.getLatLng(t)));this.map.fitBounds(r,{padding:this.boundsPadding,maxZoom:this.zoom})},activateMarker(t){const{id:e}=t.target.options,i=t.target._icon;this.resetAllMarker(),t.target.options.active||(this.activePopUp=e,this.markerState(e),i.classList.add(this.markerClass+"--active"),t.target.options.active=!0)},resetMarker(t){t.target._icon.classList.remove(this.markerClass+"--active"),this.activePopUp=null,this.markerState(null),delete t.target.options.active},resetAllMarker(){this.map.eachLayer(t=>{const e=t._icon;e&&(e.classList.remove(this.markerClass+"--active"),e.classList.remove(this.markerClusterClass+"--active"),this.activePopUp=null,this.markerState(null),delete t.options.active)})},markerState(t){this.$emit("highlighted",t)},getLatLng:t=>t.coordinates?[t.coordinates[1],t.coordinates[0]]:t.latLng?t.latLng:null}},r=(i(461),i(462),i(11)),a=Object(r.a)(s,(function(){return(0,this._self._c)("div",{ref:"mapElement",staticClass:"base-map",style:this.cssProps})}),[],!1,null,"b50e77b6",null);e.default=a.exports},368:function(t,e,i){},369:function(t,e,i){},461:function(t,e,i){"use strict";i(368)},462:function(t,e,i){"use strict";i(369)}}]);