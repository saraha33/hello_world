(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{969:function(e,t,o){"use strict";o.r(t);var n=o(11),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"test-documentation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#test-documentation"}},[e._v("#")]),e._v(" Test Documentation")]),e._v(" "),t("p",[e._v("You can build a documentation here from scratch if you need to. It's even posible to integrate it with your current vuepress site. Creating and maintaining markdown opens up the posibility for a lot more. Among other tools including gridsome, docz or even gatsby to showcase your components.")]),e._v(" "),t("p",[e._v("Click through the components on the left and open the "),t("code",[e._v(".vuepress/config.js")]),e._v(" file in the github repo. You should see that the docs are just using the same tools that you are used to.")]),e._v(" "),t("h2",{attrs:{id:"the-way-it-works"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-way-it-works"}},[e._v("#")]),e._v(" The way it works")]),e._v(" "),t("ol",[t("li",[e._v("Look inside the components folder and create a markdown file from every component")]),e._v(" "),t("li",[e._v("Combine this documentation markdown file with the "),t("code",[e._v("Readme.md")]),e._v(" and the "),t("code",[e._v("<docs>")]),e._v(" block")]),e._v(" "),t("li",[e._v("Save all those component documentations in the docs folder")]),e._v(" "),t("li",[e._v("Launch a chokidar watcher to update each doc when needed")]),e._v(" "),t("li",[e._v("Start vuepress to visualize the obtained markdown files")])])])}),[],!1,null,null,null);t.default=a.exports}}]);